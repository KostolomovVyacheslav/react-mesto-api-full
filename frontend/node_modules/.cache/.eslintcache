[{"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","D:\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js":"2","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"3","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\authorization.js":"4","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"5","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"6","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"7","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"8","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"9","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"10","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"11","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"12","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"13","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"14","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"15","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"16","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"17","D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"18","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"19"},{"size":655,"mtime":1664209344553,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1664115747251,"results":"22","hashOfConfig":"21"},{"size":8677,"mtime":1664821908516,"results":"23","hashOfConfig":"21"},{"size":1363,"mtime":1664701878369,"results":"24","hashOfConfig":"21"},{"size":492,"mtime":1664659949124,"results":"25","hashOfConfig":"21"},{"size":1579,"mtime":1664477686145,"results":"26","hashOfConfig":"21"},{"size":193,"mtime":1664651789380,"results":"27","hashOfConfig":"21"},{"size":1410,"mtime":1664704375990,"results":"28","hashOfConfig":"21"},{"size":1130,"mtime":1664704374794,"results":"29","hashOfConfig":"21"},{"size":189,"mtime":1664115747240,"results":"30","hashOfConfig":"21"},{"size":1725,"mtime":1664115747238,"results":"31","hashOfConfig":"21"},{"size":1155,"mtime":1664115747240,"results":"32","hashOfConfig":"21"},{"size":781,"mtime":1664736814637,"results":"33","hashOfConfig":"21"},{"size":687,"mtime":1664702073083,"results":"34","hashOfConfig":"21"},{"size":2007,"mtime":1664736936018,"results":"35","hashOfConfig":"21"},{"size":747,"mtime":1664115747241,"results":"36","hashOfConfig":"21"},{"size":3331,"mtime":1664659935087,"results":"37","hashOfConfig":"21"},{"size":118,"mtime":1664115747242,"results":"38","hashOfConfig":"21"},{"size":1473,"mtime":1664115747239,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o86yjf",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["99"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Navigate, useNavigate} from 'react-router-dom';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\n\r\nimport PopupWithForm from './PopupWithForm';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nimport api from '../utils/api';\r\nimport authorization from '../utils/authorization.js'\r\n\r\nfunction App() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [isAuthSuccess, setIsAuthSuccess] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n  \r\n  // Попапы редактирования аватара, профиля, добавления и удаления карточки\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\r\n\r\n  // Попап карточки\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [isImagePopupOpen, setImagePopup] = useState(false);\r\n\r\n  // Попап авторизации\r\n  const [infoTooltip, setInfoTooltip] = useState(false);\r\n  const [popupTitle, setPopupTitle] = useState('');\r\n\r\n  const jwt = localStorage.getItem('token');\r\n\r\n  const handleRegister = (data) => {\r\n    authorization.register(data)\r\n    .then(() => {\r\n      setPopupTitle('Вы успешно зарегистрировались!');\r\n      navigate('/sign-in');\r\n      setIsAuthSuccess(true);\r\n    })\r\n    .catch(() => {\r\n      setPopupTitle('Что-то пошло не так! Попробуйте ещё раз.');\r\n      setIsAuthSuccess(false);\r\n    })\r\n    .finally(() => {\r\n      handleInfoTooltip();\r\n    })\r\n  };\r\n\r\n  const handleAuthorization = (data) => {\r\n    authorization.authorize(data)\r\n    .then(res => {\r\n      localStorage.setItem('token', res.token);\r\n      setLoggedIn(true);\r\n      setEmail(data.email);\r\n      navigate('/');\r\n    })\r\n    .catch(() => {\r\n      setPopupTitle('Что-то пошло не так! Попробуйте ещё раз.');\r\n      setIsAuthSuccess(false);\r\n      handleInfoTooltip();\r\n    })\r\n  };\r\n\r\n  const tockenCheck = () => {\r\n    if (!jwt) return;\r\n\r\n    authorization.getContent(jwt)\r\n    .then(res => {\r\n      setLoggedIn(true);\r\n      setEmail(res.data.email);\r\n      navigate('/');\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    tockenCheck();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      Promise.all([api.getUserData(), api.getInitialCards()])\r\n      .then(([userDataResult, cardsResult]) => {\r\n        setCurrentUser(userDataResult);\r\n        setCards(cardsResult);\r\n      })\r\n      .catch(error => console.log(error));\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const handleInfoTooltip = () => {\r\n    setInfoTooltip(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setLoggedIn(false);\r\n    setEmail(null);\r\n    localStorage.removeItem('token');\r\n    navigate('/sign-in');\r\n  };\r\n\r\n  const handleCardLike = (card) => {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    api.changeLikeStatus(card._id, isLiked)\r\n    .then((newCard) => {\r\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    })\r\n    .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleCardDelete = (card) => {\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards((cards) => cards.filter(item => item._id !== card._id));\r\n    })\r\n    .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleEditProfileClick = () => {\r\n    setEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleCardClick = (target) => {\r\n    setImagePopup(true);\r\n    setSelectedCard(target);\r\n  };\r\n\r\n  const handleUpdateUser = ({name, about}) => {\r\n    const userData = {\r\n      name: name,\r\n      about: about\r\n    };\r\n\r\n    setRenderLoading(true);\r\n    api.editProfile(userData)\r\n    .then(res => {\r\n      setCurrentUser(res);\r\n      closeAllPopups();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setRenderLoading(false);\r\n    })\r\n  };\r\n\r\n  const handleUpdateAvatar = ({avatar}) => {\r\n    const avatarData = {\r\n      avatarLink: avatar\r\n    };\r\n\r\n    setRenderLoading(true);\r\n    api.changeProfileAvatar(avatarData)\r\n    .then(res => {\r\n      setCurrentUser(res);\r\n      closeAllPopups();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setRenderLoading(false);\r\n    })\r\n  };\r\n\r\n  const handleAddPlaceSubmit = (item) => {\r\n    setRenderLoading(true);\r\n    api.addNewCard(item)\r\n    .then(res => {\r\n      setCards([res, ...cards]);\r\n      closeAllPopups();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setRenderLoading(false);\r\n    })\r\n  };\r\n\r\n  // Закрытие всех попапов\r\n  const closeAllPopups = () => {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setDeletePopupOpen(false);\r\n    setImagePopup(false);\r\n    setInfoTooltip(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n\r\n        <Routes>\r\n\r\n          <Route path=\"*\" element={<Navigate to={loggedIn ? \"/\" : \"sign-in\"}></Navigate>} />\r\n          \r\n          <Route path=\"/sign-up\" element={\r\n            <>\r\n              <Header title=\"Войти\" route=\"/sign-in\" />\r\n              <Register onRegister={handleRegister} />\r\n            </>\r\n          }/>\r\n\r\n          <Route path=\"/sign-in\" element={\r\n            <>\r\n              <Header title=\"Регистрация\" route=\"/sign-up\" />\r\n              <Login onAuthorization={handleAuthorization} />\r\n            </>\r\n          } />\r\n\r\n          <Route exact path=\"/\" element={\r\n\r\n            <ProtectedRoute loggedIn={loggedIn} cards={cards} element={\r\n              <>\r\n                <Header email={email} title=\"Выйти\" onLogout={handleLogout} route=\"\" />\r\n                <Main\r\n                loggedIn={loggedIn}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardDelete={handleCardDelete}\r\n                onCardLike={handleCardLike}\r\n                onImage={handleCardClick}\r\n                card={selectedCard}\r\n                cards={cards}\r\n                >\r\n                </Main>\r\n                <Footer />\r\n              </>\r\n            }>\r\n            </ProtectedRoute>}\r\n          >\r\n\r\n          </Route>\r\n\r\n        </Routes>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}  renderLoading={renderLoading}/>\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} renderLoading={renderLoading}/>\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdateNewCard={handleAddPlaceSubmit} renderLoading={renderLoading}/>\r\n\r\n        <PopupWithForm\r\n          isOpen={isDeletePopupOpen}\r\n          onClose={closeAllPopups}\r\n          title={'Вы уверены?'}\r\n          name={'delete-form'}\r\n          formId={'#delete-img-form'}\r\n          buttonnId={'#delete-form-confirm-button'}\r\n          buttonText={'Да'}\r\n        >\r\n        </PopupWithForm>\r\n\r\n        <ImagePopup\r\n          isOpen={isImagePopupOpen}\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n        <InfoTooltip\r\n          isAuthSuccess={isAuthSuccess}\r\n          isOpen={infoTooltip}\r\n          title={popupTitle}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n      </CurrentUserContext.Provider>\r\n           \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\authorization.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",["100"],[],"import { useContext, useState, useEffect } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n   \r\n   const currentUser = useContext(CurrentUserContext);\r\n   const [userName, setUserName] = useState(currentUser.name);\r\n   const [userDescription, setUserDescription] = useState(currentUser.about);\r\n\r\n   const buttonText = `${props.renderLoading ? 'Сохранение...' : 'Сохранить'}`;\r\n\r\n   useEffect(() => {\r\n      setUserName(currentUser.name);\r\n      setUserDescription(currentUser.about);\r\n   }, [props.isOpen]);\r\n\r\n   const handleChangeName = (evt) => {\r\n      setUserName(evt.target.value);\r\n   };\r\n\r\n   const handleChangeDescription = (evt) => {\r\n      setUserDescription(evt.target.value);\r\n   };\r\n\r\n   const handleSubmit = (evt) => {\r\n      evt.preventDefault();\r\n\r\n      props.onUpdateUser({\r\n         name: userName,\r\n         about: userDescription,\r\n       });\r\n   };\r\n\r\n   return(\r\n      <PopupWithForm\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n        title={'Редактировать профиль'}\r\n        name={'edit-form'}\r\n        formId={'#edit-form'}\r\n        buttonId={'#profile-form-save-button'}\r\n        buttonText={buttonText}\r\n      >\r\n         <input className=\"popup__input popup__input_name\" name=\"inputUserName\" type=\"text\" value={userName || ''} onChange={handleChangeName} placeholder=\"Как Вас зовут?\" minLength=\"2\" maxLength=\"40\" required />\r\n         <span className=\"popup__input-error\"></span>\r\n         <input className=\"popup__input popup__input_job\" name=\"inputUserJob\" type=\"text\" value={userDescription || ''} onChange={handleChangeDescription} placeholder=\"Расскажите о себе...\" minLength=\"2\" maxLength=\"200\" required />\r\n         <span className=\"popup__input-error\"></span>\r\n      </PopupWithForm>\r\n   )\r\n}\r\n\r\nexport default EditProfilePopup;","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":97,"column":6,"nodeType":"103","endLine":97,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":16,"column":7,"nodeType":"103","endLine":16,"endColumn":21,"suggestions":"106"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tockenCheck'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'currentUser.about' and 'currentUser.name'. Either include them or remove the dependency array.",["108"],{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [tockenCheck]",{"range":"113","text":"114"},"Update the dependencies array to be: [currentUser.about, currentUser.name, props.isOpen]",{"range":"115","text":"116"},[2971,2973],"[tockenCheck]",[613,627],"[currentUser.about, currentUser.name, props.isOpen]"]